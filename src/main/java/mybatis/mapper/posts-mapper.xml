<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="posts">

	<!-- 특정 캠프장 찾는 용도 -->
	<select id="findByCamp" resultType="data.Like"
		parameterType="String">
		SELECT LIKES.* FROM LIKES WHERE CAMPNAME = #{campname }
	</select>



	<!-- 게시글 N개 보기 -->
	<select id="findByPostAtoB" resultType="data.Review"
		parameterType="hashmap">
		SELECT * FROM
		(SELECT ROWNUM RN, t.* FROM
		(SELECT * FROM
		REVIEWS ORDER BY WRITED DESC) t
		) WHERE RN BETWEEN #{a} AND
		#{b}
	</select>

	<!-- 자기가 좋아요 처리한 캠핑장 불러오기 -->
	<select id="readByMyPost" resultType="data.Like">
		SELECT LIKES.CAMPNAME
		FROM
		LIKES
		JOIN USERS ON LIKES.LIKER = USERS.NAME
		WHERE USERS.ID = #{id}
		ORDER BY CAMPNAME
	</select>

	<!-- 캠핑장 좋아요 추가 -->
	<insert id="likeCamp" parameterType="hashmap">
		INSERT INTO LIKES(LIKER,
		CAMPNAME) VALUES(#{liker}, #{campname})
	</insert>

	<!-- 캠핑장 좋아요 삭제 -->
	<delete id="unlikeCamp" parameterType="hashmap">
		DELETE FROM LIKES(LIKER,
		CAMPNAME) VALUES(#{liker}, #{campname})
	</delete>

	<!-- 동일 캠핑장 좋아요 여부 검색 -->
	<select id="likeCheck" parameterType="map" resultType="int">
		select
		count(*) from LIKES WHERE LIKER = #{liker} and CAMPNAME = #{campname}
	</select>



	<insert id="write" parameterType="Hashmap">
		INSERT INTO REVIEWS(POSTNUM,
		WRITERNAME, IMG, TITLE, POSTBODY, WRITERID)
		VALUES(POSTNUM_SEQ.NEXTVAL, #{writer},
		#{image} , #{title},
		#{postBody}, #{writerId} )
	</insert>

	<update id="modify" parameterType="Hashmap">
		UPDATE REVIEWS
		SET TITLE =
		${title}
		IMG = ${image}
		POSTBODY=${postBody}
		WHERE WRITER=#{writer}
	</update>
	<delete id="delete">
		DELETE WRITER WHERE ID={writer}
	</delete>
</mapper>